{"version":3,"file":"static/js/407.7984e305.chunk.js","mappings":"4SAEaA,EAAmBC,EAAAA,QAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+iB,SC2C3C,EAxCmB,WACjB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAExBI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAEpCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQH,EAAaI,IAAI,SAC/BR,EAAe,OAALO,QAAK,IAALA,EAAAA,EAAS,GACrB,GAAG,CAACH,IAgBJ,OACEK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACrB,EAAgB,CAACsB,SAhBD,SAAAC,GACnBA,EAAEC,iBAMFV,EAJKN,EAIW,CAAEQ,MAAOR,GAHP,CAAC,EAIrB,EAQ6CY,SAAA,EACvCF,EAAAA,EAAAA,KAAA,SACEO,KAAK,SACLC,MAAOlB,EACPmB,SAVa,SAAHC,GAA+B,IAAfF,EAAKE,EAAfC,OAAUH,MAChCjB,EAAUiB,EACZ,EASQI,KAAK,OACLC,YAAY,qBAEdb,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,2BAIhB,EC6BA,EAhEe,WACb,IAAAhB,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjC4B,EAAM1B,EAAA,GAAE2B,EAAS3B,EAAA,GACxB4B,GAAkC7B,EAAAA,EAAAA,WAAS,GAAM8B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAE9BzB,GAAuBC,EAAAA,EAAAA,MAAhBE,GAAiCN,EAAAA,EAAAA,GAAAG,EAAA,GAArB,GACb4B,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,aAAW,eAAAb,GAAAc,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAC,EAAMC,GAAC,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEd,OAFcF,EAAAC,KAAA,EAEjCX,GAAa,GAAMU,EAAAE,KAAA,GACAC,EAAAA,EAAAA,IAAgBL,GAAG,KAAD,EAA/BC,EAAIC,EAAAI,KACVlB,EAAUa,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEhBM,EAAAA,OAAAA,QAAeN,EAAAK,GAAME,SAAS,QAEV,OAFUP,EAAAC,KAAA,GAE9BX,GAAa,GAAOU,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,wBAEvB,gBAAAa,GAAA,OAAA7B,EAAA8B,MAAA,KAAAC,UAAA,EAV4B,GAU1B,IASH,OAPA5C,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQH,EAAaI,IAAI,SAC/BuB,EAAUxB,GAEV4C,aAAaC,QAAQ,eAAgBvB,EAASwB,SAAQ,UAAAC,OAAa/C,GACrE,GAAG,CAACwB,EAAW3B,EAAcyB,EAASwB,YAGpCzC,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,CACGgB,IAAalB,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,KACrB9C,EAAAA,EAAAA,KAAC+C,EAAW,CAAA7C,SAAC,kBACbF,EAAAA,EAAAA,KAACgD,EAAU,IACVlC,IACCd,EAAAA,EAAAA,KAACiD,EAAU,CAAA/C,SACRY,EAAOoC,KAAI,SAAAC,GAAK,OACfnD,EAAAA,EAAAA,KAACoD,EAAAA,GAAI,CAEHC,GAAI,CACFT,SAAS,WAADC,OAAaM,EAAMG,IAC3BC,MAAO,CAAEC,KAAMpC,EAASwB,WACxB1C,UAEFC,EAAAA,EAAAA,MAACsD,EAAc,CAAAvD,SAAA,CACZiD,EAAMO,aACL1D,EAAAA,EAAAA,KAAA,OACE2D,IAAG,kCAAAd,OAAoCM,EAAMO,aAC7CE,IAAKT,EAAMU,eACXC,OAAO,SAGT9D,EAAAA,EAAAA,KAAC+D,EAAc,CAAA7D,UACbF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAGRF,EAAAA,EAAAA,KAAA,MAAAE,SAAKiD,EAAMa,SACX7D,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,UAASiD,EAAMc,aAAaC,QAAQ,UAnBpCf,EAAMG,GAqBN,QAMnB,EAIMP,EAAchE,EAAAA,QAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gFAMvBgE,EAAalE,EAAAA,QAAAA,GAASoF,IAAAA,GAAAlF,EAAAA,EAAAA,GAAA,4MAWtBwE,EAAiB1E,EAAAA,QAAAA,GAASqF,IAAAA,GAAAnF,EAAAA,EAAAA,GAAA,6TAmB1B8E,EAAiBhF,EAAAA,QAAAA,IAAUsF,IAAAA,GAAApF,EAAAA,EAAAA,GAAA,uK","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","Pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  width: fit-content;\n  gap: 10px;\n  padding: 5px;\n  padding-left: 10px;\n  margin-bottom: 20px;\n  background-color: #f0f5ff;\n  border-radius: 10px;\n  input {\n    border: none;\n    background-color: transparent;\n    height: 30px;\n    outline: none;\n    font-size: 20px;\n  }\n  button {\n    width: 40px;\n    height: 40px;\n    border: none;\n    border-radius: 50%;\n    color: #f0f5ff;\n    background-color: #0b0d3f;\n    cursor: pointer;\n  }\n`;\n","import React, { useState } from 'react';\nimport { StyledSearchForm } from './SearchForm.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nconst SearchForm = () => {\n  const [search, setSearch] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    setSearch(query ?? '');\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!search) {\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ query: search });\n  };\n\n  const handleChange = ({ target: { value } }) => {\n    setSearch(value);\n  };\n\n  return (\n    <>\n      <StyledSearchForm onSubmit={handleSubmit}>\n        <input\n          name=\"search\"\n          value={search}\n          onChange={handleChange}\n          type=\"text\"\n          placeholder=\"Type your movie\"\n        />\n        <button>&#x1F50E;&#xFE0E;</button>\n      </StyledSearchForm>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'API/API';\nimport { Notify } from 'notiflix';\nimport Loader from 'components/loader/Loader';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n\n  const getMovies = useCallback(async q => {\n    try {\n      setIsLoading(true);\n      const data = await getMovieByQuery(q);\n      setMovies(data);\n    } catch (error) {\n      Notify.failure(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    getMovies(query);\n\n    localStorage.setItem('previousPath', location.pathname + `?query=${query}`);\n  }, [getMovies, searchParams, location.pathname]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <StyledTitle>Search movie</StyledTitle>\n      <SearchForm />\n      {movies && (\n        <StyledList>\n          {movies.map(movie => (\n            <Link\n              key={movie.id}\n              to={{\n                pathname: `/movies/${movie.id}`,\n                state: { from: location.pathname },\n              }}\n            >\n              <StyledListItem>\n                {movie.poster_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                    alt={movie.original_title}\n                    height=\"250\"\n                  />\n                ) : (\n                  <StyledNoPoster>\n                    <h4>No poster</h4>\n                  </StyledNoPoster>\n                )}\n                <h3>{movie.title}</h3>\n                <p> &#9733;{movie.vote_average.toFixed(1)}</p>\n              </StyledListItem>\n            </Link>\n          ))}\n        </StyledList>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n\nconst StyledTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nconst StyledList = styled.ul`\n  display: grid;\n  grid-row-gap: 20px;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: 350px;\n  margin: 0;\n  padding: 0 20px 20px;\n  font-weight: 500;\n  list-style: none;\n`;\n\nconst StyledListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding: 5px;\n  transition: 0.5s cubic-bezier(0.18, 0.89, 0.32, 1.28);\n\n  &:hover,\n  &:focus {\n    color: #0b0d3f;\n    background-color: #f0f5ff;\n    border-radius: 10px;\n  }\n  h3 {\n    text-align: center;\n  }\n`;\n\nconst StyledNoPoster = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 167px;\n  height: 250px;\n  text-align: center;\n  border: 1px solid #f0f5ff;\n`;\n"],"names":["StyledSearchForm","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","search","setSearch","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","query","get","_jsx","_Fragment","children","_jsxs","onSubmit","e","preventDefault","name","value","onChange","_ref","target","type","placeholder","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","location","useLocation","getMovies","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","q","data","_context","prev","next","getMovieByQuery","sent","t0","Notify","message","finish","stop","_x","apply","arguments","localStorage","setItem","pathname","concat","Loader","StyledTitle","SearchForm","StyledList","map","movie","Link","to","id","state","from","StyledListItem","poster_path","src","alt","original_title","height","StyledNoPoster","title","vote_average","toFixed","_templateObject2","_templateObject3","_templateObject4"],"sourceRoot":""}