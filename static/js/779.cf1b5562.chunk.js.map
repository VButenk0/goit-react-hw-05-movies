{"version":3,"file":"static/js/779.cf1b5562.chunk.js","mappings":"qRAAiBA,EAAWC,EAAQ,KAA5BC,QAEKC,EAAaH,EAAOI,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iNAatBC,EAAcP,EAAOQ,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kH,SCkCpC,EA1CgB,WACd,IAAQI,GAAOC,EAAAA,EAAAA,MAAPD,GAERE,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAiB9B,OAfAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEC,OAFDF,EAAAC,KAAA,EAElBT,GAAa,GAAMQ,EAAAE,KAAA,GACAC,EAAAA,EAAAA,IAAgBtB,GAAI,KAAD,EAAhCkB,EAAIC,EAAAI,KACVhB,EAAWW,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEjBM,EAAAA,OAAAA,QAAeN,EAAAK,GAAME,SAAS,QAEV,OAFUP,EAAAC,KAAA,GAE9BT,GAAa,GAAOQ,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAEvB,kBAVkB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAWnBjB,GACF,GAAG,CAACb,KAGF+B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGvB,IAAawB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACb,OAAP7B,QAAO,IAAPA,GAAAA,EAAS8B,QACRF,EAAAA,EAAAA,KAACzC,EAAU,CAAAwC,SACR3B,EAAQ+B,KAAI,SAAAC,GAAA,IAAGtC,EAAEsC,EAAFtC,GAAIuC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAAO,OACjCT,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAClC,EAAW,CAAAoC,SAAA,EACVC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,YAAc,IAAEM,MAExBL,EAAAA,EAAAA,KAAA,KAAAD,SAAIO,MAJGxC,EAKJ,OAITkC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gDAIZ,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const { default: styled } = require('styled-components');\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  li {\n    width: 80%;\n    padding: 20px;\n    border-radius: 10px;\n    background-color: #0b0d3f;\n    border: 1px solid #f0f5ff;\n  }\n`;\n\nexport const StyledTitle = styled.h4`\n  font-size: 18px;\n  margin-bottom: 10px;\n  span {\n    font-size: 16px;\n    font-weight: 400;\n  }\n`;\n","import { getMovieReviews } from 'API/API';\nimport Loader from 'components/loader/Loader';\nimport { Notify } from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { StyledList, StyledTitle } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCastById = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMovieReviews(id);\n        setReviews(data);\n      } catch (error) {\n        Notify.failure(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCastById();\n  }, [id]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {reviews?.length ? (\n        <StyledList>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <StyledTitle>\n                <span>Author:</span> {author}\n              </StyledTitle>\n              <p>{content}</p>\n            </li>\n          ))}\n        </StyledList>\n      ) : (\n        <h3>We don't have any reviews for this movie.</h3>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["styled","require","default","StyledList","ul","_templateObject","_taggedTemplateLiteral","StyledTitle","h4","_templateObject2","id","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchCastById","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieReviews","sent","t0","Notify","message","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","length","map","_ref2","author","content"],"sourceRoot":""}